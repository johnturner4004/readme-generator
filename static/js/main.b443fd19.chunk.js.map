{"version":3,"sources":["components/contents/CodeDisplay.jsx","components/contents/Form/Conclusion.jsx","components/contents/Form/GettingStarted.jsx","components/contents/Form/LicenseList.jsx","components/contents/Form/ProjectOverview.jsx","components/contents/Form/Shields.jsx","components/contents/Form/TechList.jsx","components/contents/Form/Form.jsx","components/contents/MDPreview.jsx","components/layout/Header.jsx","components/App.jsx","reportWebVitals.js","redux/reducer/gettingStartedCode.reducer.js","redux/reducer/iconList.reducer.js","redux/reducer/overviewCode.reducer.js","redux/reducer/shieldCode.reducer.js","redux/reducer/textInput.reducer.js","redux/reducer/licenseCode.reducer.js","redux/reducer/conclusionCode.reducer.js","redux/reducer/_root.reducer.js","index.js"],"names":["useStyles","makeStyles","codeCard","padding","margin","height","backgroundColor","fontSize","CodeDisplay","classes","store","useSelector","Card","className","wrapLongLines","language","style","atomDark","shieldCode","overviewCode","iconList","gettingStartedCode","licenseCode","conclusionCode","Conclusion","dispatch","useDispatch","useState","acknowledgement","setAcknowledgement","linkedIn","setLinkedIn","email","setEmail","handleBlur","type","payload","useEffect","TextField","variant","multiline","rows","onChange","event","target","value","onBlur","label","GettingStarted","gettingStarted","setGettingStarted","prerequisites","setPrerequisites","installation","setInstallation","usage","setUsage","minRows","LicenseList","selected","setSelected","makeLicenseTag","index","licenseIcon","license","icon","licenseLink","url","licenseName","name","licenseTag","FormControl","component","FormLabel","RadioGroup","aria-label","onClick","console","log","Number","map","item","FormControlLabel","id","control","Radio","color","checkedIcon","src","inactive","column","display","flexDirection","width","row","spacing","ProjectOverview","projectName","setProjectName","description","setDescription","imageUrl","setImageUrl","projectOverviewCode","placeholder","clsx","theme","Shields","githubUser","setGithubUser","githubRepo","setGithubRepo","techList","alignItems","iconRow","flexWrap","TechList","checked","setChecked","handleChange","i","indexOf","sort","a","b","makeTechTag","temp","j","length","push","indexArr","tagList","Languages","alt","Checkbox","formCard","marginLeft","marginRight","divider","marginTop","marginBottom","twoColumn","oneColumn","Form","linkedInId","code","Divider","previewCard","MDPreview","rehypePlugins","rehypeRaw","Header","AppBar","position","Typography","page","maxWidth","paper","paddingBottom","paddingTop","gridContainer","App","Container","Paper","Grid","container","direction","xs","sm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","state","action","textInput","rootReducer","combineReducers","createStore","applyMiddleware","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b443fd19.chunk.js","sourcesContent":["import Card from '@material-ui/core/Card';\nimport { makeStyles } from '@material-ui/styles';\nimport { useSelector } from 'react-redux';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { atomDark } from 'react-syntax-highlighter/dist/cjs/styles/prism';\n\nconst useStyles = makeStyles({\n  codeCard: {\n    padding: 10,\n    margin: 10,\n    height: '100%',\n    backgroundColor: '#1D1F21',\n    fontSize: '0.6em',\n  },\n});\n\nexport default function CodeDisplay() {\n  const classes = useStyles();\n  const store = useSelector(store => store);\n\n  return(\n    <Card className={classes.codeCard}>\n      <div>\n      {/* {store.shieldCode ?\n      <SyntaxHighlighter \n        wrapLongLines={true}\n        language=\"markdown\" \n        style={atomDark}\n      >\n        {store.shieldCode}\n      </SyntaxHighlighter>\n      :\"\"}\n      {store.overviewCode ?\n      <SyntaxHighlighter \n        wrapLongLines={true}\n        language=\"markdown\" \n        style={atomDark}\n      >\n        {store.overviewCode}\n      </SyntaxHighlighter>\n      :\"\"}\n      {store.iconList ?\n      <SyntaxHighlighter \n        wrapLongLines={true}\n        language=\"markdown\" \n        style={atomDark}\n      >\n        {store.iconList}\n      </SyntaxHighlighter>\n      :\"\"}\n      {store.gettingStartedCode ?\n      <SyntaxHighlighter \n        wrapLongLines={true}\n        language=\"markdown\" \n        style={atomDark}\n      >\n        {store.gettingStartedCode}\n      </SyntaxHighlighter>\n      :\"\"}\n      {store.licenseCode ?\n      <SyntaxHighlighter\n        wrapLongLines={true}\n        language=\"markdown\"\n        style={atomDark}\n      >\n        {store.licenseCode}\n      </SyntaxHighlighter>\n      :\"\"}\n      {store.conclusionCode ?\n      <SyntaxHighlighter\n        wrapLongLines={true}\n        language=\"markdown\"\n        style={atomDark}\n      >\n        {store.conclusionCode}\n      </SyntaxHighlighter>\n      :\"\"} */}\n      {store ?\n      <SyntaxHighlighter\n      wrapLongLines={true}\n      language=\"markdown\"\n      style={atomDark}\n      >\n        {store.shieldCode,\n        store.overviewCode,\n        store.iconList,\n        store.gettingStartedCode,\n        store.licenseCode,\n        store.conclusionCode}\n      </SyntaxHighlighter>\n      :\"\"}\n      </div>\n    </Card>\n  )\n}","import TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport TextField from '@material-ui/core/TextField';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nexport default function Conclusion() {\n  const dispatch = useDispatch();\n  const [acknowledgement, setAcknowledgement] = useState('');\n  const [linkedIn, setLinkedIn] = useState('');\n  const [email, setEmail] = useState('');\n\n  const handleBlur = () => {\n    const conclusionCode = `\n## Acknowledgements\n\n${acknowledgement}\n\n## Contacts\n\n<a src=www.linkedin.com/in/${linkedIn}><img src=\"https://img.shields.io/badge/LinkedIn-0077B5?style=for-the-badge&logo=linkedin&logoColor=white\" /></a>  <a src=\"mailto:${email}><img src=https://raw.githubusercontent.com/johnturner4004/readme-generator/master/src/components/assets/images/email_me_button_icon_151852.svg /></a>`;\n\n    dispatch({ type: 'SET_CONCLUSION', payload: conclusionCode });\n  };\n\n  useEffect(() => {\n    handleBlur();\n  }, []);\n\n  return(\n    <>\n      <TextField variant=\"outlined\" multiline rows={2} onChange={(event) => setAcknowledgement(event.target.value)} onBlur={() => handleBlur()} label=\"Acknowledgements\" />\n      <TextField variant=\"outlined\" onChange={(event) => setLinkedIn(event.target.value)} onBlur={() => handleBlur()} label=\"LinkedIn username\" />\n      <TextField variant=\"outlined\" onChange={(event) => setEmail(event.target.value)} onBlur={() => handleBlur()} label=\"Email Address\" />\n    </>\n  )\n}","import { TextField } from \"@material-ui/core\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function GettingStarted() {\n  const dispatch = useDispatch();\n  const [gettingStarted, setGettingStarted] = useState(\n    \"In the following sections, the prerequisites that need to be installed to run this project on your computer and steps to install it are listed.\"\n  );\n  const [prerequisites, setPrerequisites] = useState(\"\");\n  const [installation, setInstallation] = useState(\"\");\n  const [usage, setUsage] = useState(\"\");\n\n  const handleBlur = () => {\n    let gettingStartedCode = `## Getting Started\n\n${gettingStarted}\n\n### Prerequisites\n\n${prerequisites}\n\n### Installation\n\n${installation}\n\n## Usage\n\n${usage}\n\n`;\n    dispatch({ type: \"UPDATE_GETTING_STARTED\", payload: gettingStartedCode });\n  };\n\n  useEffect(() => {\n    handleBlur();\n  }, []);\n\n  return (\n    <>\n      <TextField\n        multiline\n        minRows={2}\n        variant=\"outlined\"\n        label=\"Getting Started\"\n        onChange={(event) => setGettingStarted(event.target.value)}\n        onBlur={() => handleBlur()}\n        minRows={5}\n        placeholder=\"Put anything a person would need to know before attempting to replicate you project\"\n      />\n      <TextField\n        multiline\n        minRows={2}\n        variant=\"outlined\"\n        onChange={(event) => setPrerequisites(event.target.value)}\n        onBlur={() => handleBlur()}\n        minRows={5}\n        label=\"Prerequisites\"\n        placeholder=\"List any software, installation instructions for that software, and/or sources for that software that a person would need to install before attempting to replicate your project\"\n      />\n      <TextField\n        multiline\n        minRows={2}\n        variant=\"outlined\"\n        onChange={(event) => setInstallation(event.target.value)}\n        onBlur={() => handleBlur()}\n        minRows={5}\n        label=\"Installation\"\n        placeholder=\"List the instructions a person would need to follow to get your project up and running\"\n      />\n      <TextField\n        multiline\n        minRows={2}\n        variant=\"outlined\"\n        onChange={(event) => setUsage(event.target.value)}\n        onBlur={() => handleBlur()}\n        minRows={5}\n        label=\"Usage\"\n        placeholder=\"Tell a person how to use your project. List steps if necessary to use your project\"\n      />\n    </>\n  );\n}\n","import license from '../../assets/license.json'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Radio from '@material-ui/core/Radio'\nimport { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nexport default function LicenseList() {\n  const dispatch = useDispatch()\n  const [selected, setSelected] = useState(2);\n\n  const handleChange = (event) => {\n    console.log(event.target.value);\n    setSelected(Number(event.target.value));\n    makeLicenseTag(Number(event.target.value))\n  }\n\n  const makeLicenseTag = (index) => {\n    let licenseIcon = license[index].icon;\n    let licenseLink = license[index].url;\n    let licenseName = license[index].name;\n    let licenseTag = `\n## License\n\n<a src=\"${licenseLink}\"><img src=\"${licenseIcon}\" height=40 />${licenseName}</a>`\ndispatch({ type: 'UPDATE_LICENSE', payload: licenseTag });\n  }\n\n  useEffect(() => {\n    makeLicenseTag(selected);\n  }, []);\n\n  return(\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">License</FormLabel>\n      <RadioGroup \n        aria-label=\"license\" \n        name=\"license\" \n        value={selected} \n        onClick={handleChange}\n      >\n        {license.map(item => {return(  \n          <FormControlLabel \n            key={item.id} \n            value={item.id} \n            control={\n              <Radio\n                color=\"primary\" \n                checkedIcon={\n                  <img src={item.icon} height=\"48px\"/>\n                }\n                icon={\n                  <img src={item.inactive} height=\"48px\"/>\n                } \n              />\n            } \n            label={item.name} \n            height=\"24pt\"\n          />\n        )})}\n      </RadioGroup>\n    </FormControl>\n  )\n}","import TextField from \"@material-ui/core/TextField\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport { useEffect } from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(() => ({\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"50%\",\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    width: \"67%\",\n  },\n  spacing: {\n    padding: \"10px\",\n  },\n}));\n\nexport default function ProjectOverview() {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const [projectName, setProjectName] = useState(\"Project Name\");\n  const [description, setDescription] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n\n  const handleBlur = () => {\n    let projectOverviewCode = `# ${projectName}\n\n## Table of Contents\n\n- [Description](#description)\n- [Screenshots](#screenshots)\n- [Built With](#built-with)\n- [Getting Started](#getting-started)\n  - [Prerequisites](#prerequisites)\n  - [Installation](#installation)\n- [Usage](#usage)\n- [License](#license)\n- [Acknowledgements](#acknowledgements)\n- [Contacts](#contacts)\n\n## Description\n\n${description}\n\n## Screenshots\n\n${imageUrl}`;\n\n    dispatch({ type: \"UPDATE_OVERVIEW\", payload: projectOverviewCode });\n  };\n\n  useEffect(() => {\n    handleBlur();\n  }, []);\n\n  return (\n    <>\n    <div className={classes.row}>\n      <div className={classes.column}>\n      <TextField\n      className={classes.spacing}\n        variant=\"outlined\"\n        onChange={(event) => setProjectName(event.target.value)}\n        onBlur={() => handleBlur()}\n        label=\"Project name\"\n        placeholder=\"Not the repo name\"\n      />\n        <TextField\n          className={classes.spacing}\n          variant=\"outlined\"\n          onChange={(event) => setImageUrl(`<img src=\"${event.target.value}\" />`)}\n          onBlur={() => handleBlur()}\n          label=\"Image URL\"\n          placeholder=\"or relative path\"\n        />\n        </div>\n      <TextField\n      className={clsx(classes.column, classes.spacing)}\n        multiline\n        minRows={5}\n        variant=\"outlined\"\n        onChange={(event) => setDescription(event.target.value)}\n        onBlur={() => handleBlur()}\n        label=\"Description\"\n        placeholder=\"Give a detailed description of what your project does and what problem it solves. This is a great place to put a link to a deployed version of your project\"\n      />\n      </div>\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport makeStyles from'@material-ui/styles/makeStyles';\n\nconst useStyles = makeStyles(theme => ({\n  column: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '33%',\n  },\n  spacing: {\n    padding: '10px',\n  },\n}));\n\n\nexport default function Shields() {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const [githubUser, setGithubUser] = useState('johnturner4004');\n  const [githubRepo, setGithubRepo] = useState('readme-generator');\n\n  \n  function handleBlur() {\n    let shieldCode =`![License](https://img.shields.io/github/license/${githubUser}/${githubRepo}.svg?style=for-the-badge) ![Repo Size](https://img.shields.io/github/languages/code-size/${githubUser}/${githubRepo}.svg?style=for-the-badge) ![TOP_LANGUAGE](https://img.shields.io/github/languages/top/${githubUser}/${githubRepo}.svg?style=for-the-badge) ![FORKS](https://img.shields.io/github/forks/${githubUser}/${githubRepo}.svg?style=for-the-badge&social) ![Stars](https://img.shields.io/github/stars/${githubUser}/${githubRepo}.svg?style=for-the-badge)`;\n\n    dispatch({ type: 'UPDATE_SHIELD', payload: shieldCode });\n  }\n\n  useEffect(() => {\n    handleBlur();\n  }, []);\n\n  return (\n    <>\n    <div className={classes.column}>\n      <TextField className={classes.spacing} variant=\"outlined\" onChange={(event)  => setGithubUser(event.target.value)} onBlur={() => handleBlur()} label=\"Github Username\" />\n      <TextField className={classes.spacing} variant=\"outlined\" onChange={(event)  => setGithubRepo(event.target.value)} onBlur={() => handleBlur()} label=\"Github Repository Name\" />\n      </div>\n    </>\n  );\n}","import Languages from '../../assets/languages.json';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles({\n  techList: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    margin: 10,\n  },\n  iconRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  icon: {\n    width: 40,\n    height: 40,\n  },\n})\n\nexport default function TechList() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [checked, setChecked] = useState([]);\n\n  function handleChange(event) {\n    let i = checked.indexOf(event.target.value);\n    if (i === -1) {\n      setChecked(([...checked, event.target.value]).sort((a, b) => a - b));\n      makeTechTag(([...checked, event.target.value]).sort((a, b) => a - b));\n    } else {\n      let temp = [];\n      for (let j = 0; j < checked.length; j++) {\n        if (j !== i) {\n          temp.push(checked[j]);\n        }\n        setChecked(temp);\n        makeTechTag(temp);\n      }\n    }\n  }\n\n  const makeTechTag = (indexArr) => {\n    let tagList = '';\n    for (let i = 0; i < indexArr.length; i++) {\n      let icon = Languages[Number(indexArr[i])].icon;\n      tagList += `<img src=\"${icon}\" height=\"40px\" width=\"40px\" />`;\n      console.log(icon, tagList);\n    }\n\n    let techList =\n`## Built With\n\n${tagList}`;\n\n    dispatch ({ type: 'UPDATE_ICONS' , payload: techList });\n  }\n\n  return(\n    <>\n      <FormControl className={classes.iconRow}>\n      {Languages.map(language => {\n        return (\n          <div className={classes.techList} key={language.id}>\n            <img className={classes.icon} src={language.icon} alt={language.name} />\n            <FormControlLabel \n              control={<Checkbox color=\"primary\" \n                onChange={handleChange} \n                value={language.id} \n              />} \n              label={language.name} \n            />\n          </div>\n      )})}\n      </FormControl>\n    </>\n  )\n}","import Card from \"@material-ui/core/Card\";\nimport Divider from \"@material-ui/core/Divider\";\nimport makeStyles from \"@material-ui/styles/makeStyles\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Conclusion from \"./Conclusion\";\nimport GettingStarted from \"./GettingStarted\";\nimport LicenseList from \"./LicenseList\";\nimport ProjectOverview from \"./ProjectOverview\";\nimport Shields from \"./Shields\";\nimport TechList from \"./TechList\";\n\nconst useStyles = makeStyles({\n  formCard: {\n    padding: 10,\n    marginLeft: 20,\n    marginRight: 20,\n  },\n  divider: {\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  twoColumn: {\n    width: \"60%\",\n  },\n  oneColumn: {\n    width: \"40%\",\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n});\n\nexport default function Form() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [linkedInId, setLinkedInId] = useState(\"johnturner4004\");\n\n  const handleBlur = () => {\n    let code =\n      //shields\n      //project overview\n      //built with\n      // Usage\n      // License\n      `\n## Acknowledgements\n\n## Contacts\n\n<a href=\"https://www.linkedin.com/in/${linkedInId}\"><img src=\"https://img.shields.io/badge/LinkedIn-0077B5?style=for-the-badge&logo=linkedin&logoColor=white\" /></a>`;\n    dispatch({ type: \"UPDATE_TEXT\", payload: { code: code } });\n  };\n\n  useEffect(() => {\n    handleBlur();\n  }, []);\n\n  return (\n    <Card className={classes.formCard}>\n      <div className={classes.row}>\n        <ProjectOverview className={classes.twoColumn} />\n        <Shields className={classes.oneColumn} />\n      </div>\n      <Divider className={classes.divider} />\n      <TechList />\n      <Divider className={classes.divider} />\n      <GettingStarted />\n      <Divider className={classes.divider} />\n      <LicenseList />\n      <Divider className={classes.divider} />\n      <Conclusion />\n    </Card>\n  );\n}\n","import Card from \"@material-ui/core/Card\";\nimport makeStyles from \"@material-ui/styles/makeStyles\";\nimport ReactMarkdown from \"react-markdown\";\nimport { useSelector } from \"react-redux\";\nimport rehypeRaw from 'rehype-raw';\n\nconst useStyles = makeStyles({\n  previewCard: {\n    padding: 10,\n    margin: 10,\n    height: \"100%\",\n  },\n});\n\nexport default function MDPreview() {\n  const classes = useStyles();\n  const store = useSelector(store => store);\n\n  return (\n    <Card className={classes.previewCard}>\n      <ReactMarkdown rehypePlugins={[rehypeRaw]}>\n        {store.shieldCode}\n      </ReactMarkdown>\n      <ReactMarkdown rehypePlugins={[rehypeRaw]}>\n        {store.overviewCode}\n      </ReactMarkdown>\n      <ReactMarkdown rehypePlugins={[rehypeRaw]}>\n        {store.iconList}\n      </ReactMarkdown>\n      <ReactMarkdown rehypePlugins={[rehypeRaw]}>\n        {store.gettingStartedCode}\n      </ReactMarkdown>\n      <ReactMarkdown rehypePlugins={[rehypeRaw]}>\n        {store.licenseCode}\n      </ReactMarkdown>\n    </Card>\n  );\n}","import AppBar from \"@material-ui/core/AppBar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function Header() {\n  return (\n    <AppBar color='primary' position='relative'>\n      <Typography variant='h1'>README.md Generator</Typography>\n    </AppBar>\n  );\n};","import Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport makeStyles from '@material-ui/styles/makeStyles'\nimport CodeDisplay from './contents/CodeDisplay'\nimport Form from './contents/Form/Form'\nimport MDPreview from './contents/MDPreview'\nimport Header from './layout/Header'\n\nconst useStyles = makeStyles({\n  page: {\n    padding: 0,\n    margin: 0,\n    width: '100vw',\n    maxWidth: '100vw',\n  },\n  paper: {\n    paddingBottom: 40,\n    paddingTop: 20,\n    margin: 20,\n    height: '100%',\n  },\n  gridContainer: {\n    padding: 10,\n  },\n})\n\n\nfunction App() {\n  const classes = useStyles()\n  \n  return (\n    <Container className={classes.page}>\n      <Header />\n      <Paper className={classes.paper}>\n        <Form />\n        <Grid container className={classes.gridContainer} direction=\"row\">\n          <Grid item xs={12} sm={6}>\n            <CodeDisplay />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <MDPreview />\n          </Grid>\n        </Grid>\n      </Paper>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const gettingStartedCode = (state = '', action) => {\n  switch (action.type) {\n    case 'UPDATE_GETTING_STARTED':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default gettingStartedCode;","const iconList = (state = '', action) => {\n  switch (action.type) {\n    case 'UPDATE_ICONS':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default iconList;","const overviewCode = (state = '', action) => {\n  switch (action.type) {\n    case 'UPDATE_OVERVIEW':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default overviewCode;","const shieldCode = (state = '', action) => {\n  switch (action.type) {\n    case 'UPDATE_SHIELD':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default shieldCode;","const textInput = (state = '', action) => {\n  switch (action.type) {\n    case 'UPDATE_TEXT':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default textInput;","const licenseCode = (state = '', action) => {\n  switch (action.type) {\n    case 'UPDATE_LICENSE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default licenseCode;","const conclusionCode = (state = '', action) => {\n  switch (action.type) {\n    case 'SET_CONCLUSION':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default conclusionCode;","import { combineReducers } from 'redux';\nimport gettingStartedCode from './gettingStartedCode.reducer';\nimport iconList from './iconList.reducer';\nimport overviewCode from './overviewCode.reducer';\nimport shieldCode from './shieldCode.reducer';\nimport textInput from './textInput.reducer';\nimport licenseCode from './licenseCode.reducer';\nimport conclusionCode from './conclusionCode.reducer';\n\nconst rootReducer = combineReducers({\n  gettingStartedCode,\n  iconList,\n  overviewCode,\n  shieldCode,\n  textInput,\n  licenseCode,\n  conclusionCode,\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './redux/reducer/_root.reducer';\nimport logger from 'redux-logger'\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(logger)\n);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}