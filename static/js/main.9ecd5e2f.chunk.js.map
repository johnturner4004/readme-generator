{"version":3,"sources":["components/contents/CodeDisplay.jsx","components/contents/Form/GettingStarted.jsx","components/contents/Form/ProjectOverview.jsx","components/contents/Form/Shields.jsx","components/contents/Form/TechList.jsx","components/contents/Form/LicenseList.jsx","components/contents/Form/Form.jsx","components/contents/MDPreview.jsx","components/layout/Header.jsx","components/App.jsx","reportWebVitals.js","redux/reducer/gettingStartedCode.reducer.js","redux/reducer/iconList.reducer.js","redux/reducer/overviewCode.reducer.js","redux/reducer/shieldCode.reducer.js","redux/reducer/textInput.reducer.js","redux/reducer/_root.reducer.js","index.js"],"names":["useStyles","makeStyles","codeCard","padding","margin","height","backgroundColor","CodeDisplay","classes","store","useSelector","Card","className","shieldCode","wrapLongLines","language","style","atomDark","overviewCode","iconList","gettingStartedCode","GettingStarted","dispatch","useDispatch","useState","gettingStarted","setGettingStarted","prerequisites","setPrerequisites","installation","setInstallation","usage","setUsage","handleBlur","type","payload","useEffect","TextareaAutosize","value","onChange","event","target","onBlur","minRows","placeholder","ProjectOverview","projectName","setProjectName","description","setDescription","imageUrl","setImageUrl","projectOverviewCode","TextField","label","Shields","githubUser","setGithubUser","githubRepo","setGithubRepo","techList","display","flexDirection","alignItems","iconRow","flexWrap","icon","width","TechList","checked","setChecked","handleChange","i","indexOf","sort","a","b","makeTechTag","temp","j","length","push","indexArr","tagList","Languages","Number","console","log","FormControl","map","src","alt","name","FormControlLabel","control","Checkbox","color","id","LicenseList","selected","setSelected","component","FormLabel","RadioGroup","aria-label","onClick","license","item","Radio","checkedIcon","inactive","formCard","marginLeft","marginRight","divider","marginTop","marginBottom","Form","linkedInId","setLinkedInId","code","Divider","previewCard","MDPreview","rehypePlugins","rehypeRaw","Header","AppBar","position","Typography","variant","page","maxWidth","paper","paddingBottom","paddingTop","gridContainer","App","Container","Paper","Grid","container","direction","xs","sm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","state","action","textInput","rootReducer","combineReducers","createStore","applyMiddleware","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ecd5e2f.chunk.js","sourcesContent":["import Card from '@material-ui/core/Card';\nimport { makeStyles } from '@material-ui/styles';\nimport { useSelector } from 'react-redux';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { atomDark } from 'react-syntax-highlighter/dist/cjs/styles/prism';\n\nconst useStyles = makeStyles({\n  codeCard: {\n    padding: 10,\n    margin: 10,\n    height: '100%',\n    backgroundColor: '#1D1F21',\n  },\n});\n\nexport default function CodeDisplay() {\n  const classes = useStyles();\n  const store = useSelector(store => store);\n\n  return(\n    <Card className={classes.codeCard}>\n      <div>\n      {store.shieldCode ?\n      <SyntaxHighlighter \n        wrapLongLines={true}\n        className={classes.codeCard} \n        language=\"markdown\" \n        style={atomDark}\n      >\n        {store.shieldCode}\n      </SyntaxHighlighter>\n      :\"\"}\n      {store.overviewCode ?\n      <SyntaxHighlighter \n        wrapLongLines={true}\n        className={classes.codeCard} \n        language=\"markdown\" \n        style={atomDark}\n      >\n        {store.overviewCode}\n      </SyntaxHighlighter>\n      :\"\"}\n      {store.iconList ?\n      <SyntaxHighlighter \n        wrapLongLines={true}\n        className={classes.codeCard} \n        language=\"markdown\" \n        style={atomDark}\n      >\n        {store.iconList}\n      </SyntaxHighlighter>\n      :\"\"}\n      {store.gettingStartedCode ?\n      <SyntaxHighlighter \n        wrapLongLines={true}\n        className={classes.codeCard} \n        language=\"markdown\" \n        style={atomDark}\n      >\n        {store.gettingStartedCode}\n      </SyntaxHighlighter>\n      :\"\"}\n      </div>\n    </Card>\n  )\n}","import TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function GettingStarted() {\n  const dispatch = useDispatch();\n  const [gettingStarted, setGettingStarted] = useState('In the following sections, the prerequisites that need to be installed to run this project on your computer and steps to install it are listed.');\n  const [prerequisites, setPrerequisites] = useState('');\n  const [installation, setInstallation] = useState('');\n  const [usage, setUsage] = useState('');\n\n  const handleBlur = () => {\n    let gettingStartedCode = \n`## Getting Started\n\n${gettingStarted}\n\n### Prerequisites\n\n${prerequisites}\n\n### Installation\n\n${installation}\n\n## Usage\n\n${usage}\n\n`;\n    dispatch({ type: 'UPDATE_GETTING_STARTED', payload: gettingStartedCode });\n  }\n\n  useEffect(() => {\n    handleBlur();\n  }, []);\n\n  return (\n    <>\n      <TextareaAutosize value={gettingStarted} onChange={(event)  => setGettingStarted(event.target.value)} onBlur={() => handleBlur()} minRows={5} placeholder=\"Gettng Started\" />\n      <TextareaAutosize onChange={(event) => setPrerequisites(event.target.value)} onBlur={() => handleBlur()} minRows={5} placeholder=\"Prerequisites\" />\n      <TextareaAutosize onChange={(event) => setInstallation(event.target.value)} onBlur={() => handleBlur()} minRows={5} placeholder=\"Installation\" />\n      <TextareaAutosize onChange={(event) => setUsage(event.target.value)} onBlur={() => handleBlur()} minRows={5} placeholder=\"Usage\" />\n    </>\n  )\n}","import TextField from '@material-ui/core/TextField';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize'\nimport { useEffect } from 'react';\n\n\nexport default function ProjectOverview() {\n  const dispatch = useDispatch();\n\n  const [projectName, setProjectName] = useState('Project Name');\n  const [description, setDescription] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n\n  const handleBlur = () => {\n    let projectOverviewCode = \n`# ${projectName}\n\n## Table of Contents\n\n- [Description](#description)\n- [Screenshots](#screenshots)\n- [Built With](#built-with)\n- [Getting Started](#getting-started)\n  - [Prerequisites](#prerequisites)\n  - [Installation](#installation)\n- [Usage](#usage)\n- [License](#license)\n- [Acknowledgements](#acknowledgements)\n- [Contacts](#contacts)\n\n## Description\n\n${description}\n\n## Screenshots\n\n${imageUrl}`;\n\n    dispatch({ type: 'UPDATE_OVERVIEW', payload: projectOverviewCode });\n  };\n\n  useEffect(() => {\n    handleBlur();\n  }, []);\n\n  return (\n    <>\n      <TextField onChange={(event)  => setProjectName(event.target.value)} onBlur={() => handleBlur()} label=\"Project name\" />\n      <TextareaAutosize onChange={(event) => setDescription(event.target.value)} onBlur={() => handleBlur()} minRows={5} placeholder=\"Description\"></TextareaAutosize>\n      <TextField onChange={(event) => setImageUrl(`<img src=\"${event.target.value}\" />`)} onBlur={() => handleBlur()} label=\"Image URL\" />\n    </>\n  )\n}","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\n\n\nexport default function Shields() {\n  const dispatch = useDispatch();\n\n  const [githubUser, setGithubUser] = useState('johnturner4004');\n  const [githubRepo, setGithubRepo] = useState('readme-generator');\n\n  \n  function handleBlur() {\n    let shieldCode =`![License](https://img.shields.io/github/license/${githubUser}/${githubRepo}.svg?style=for-the-badge) ![Repo Size](https://img.shields.io/github/languages/code-size/${githubUser}/${githubRepo}.svg?style=for-the-badge) ![TOP_LANGUAGE](https://img.shields.io/github/languages/top/${githubUser}/${githubRepo}.svg?style=for-the-badge) ![FORKS](https://img.shields.io/github/forks/${githubUser}/${githubRepo}.svg?style=for-the-badge&social) ![Stars](https://img.shields.io/github/stars/${githubUser}/${githubRepo}.svg?style=for-the-badge)`;\n\n    dispatch({ type: 'UPDATE_SHIELD', payload: shieldCode });\n  }\n\n  useEffect(() => {\n    handleBlur();\n  }, []);\n\n  return (\n    <>\n      <TextField onChange={(event)  => setGithubUser(event.target.value)} onBlur={() => handleBlur()} label=\"Github Username\" />\n      <TextField onChange={(event)  => setGithubRepo(event.target.value)} onBlur={() => handleBlur()} label=\"Github Repository Name\" />\n    </>\n  );\n}","import Languages from '../../assets/languages.json';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles({\n  techList: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    margin: 10,\n  },\n  iconRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  icon: {\n    width: 40,\n    height: 40,\n  },\n})\n\nexport default function TechList() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [checked, setChecked] = useState([]);\n\n  function handleChange(event) {\n    let i = checked.indexOf(event.target.value);\n    if (i === -1) {\n      setChecked(([...checked, event.target.value]).sort((a, b) => a - b));\n      makeTechTag(([...checked, event.target.value]).sort((a, b) => a - b));\n    } else {\n      let temp = [];\n      for (let j = 0; j < checked.length; j++) {\n        if (j !== i) {\n          temp.push(checked[j]);\n        }\n        setChecked(temp);\n        makeTechTag(temp);\n      }\n    }\n  }\n\n  const makeTechTag = (indexArr) => {\n    let tagList = '';\n    for (let i = 0; i < indexArr.length; i++) {\n      let icon = Languages[Number(indexArr[i])].icon;\n      tagList += `<img src=\"${icon}\" height=\"40px\" width=\"40px\" />`;\n      console.log(icon, tagList);\n    }\n\n    let techList =\n`## Built With\n\n${tagList}`;\n\n    dispatch ({ type: 'UPDATE_ICONS' , payload: techList });\n  }\n\n  return(\n    <>\n      <FormControl className={classes.iconRow}>\n      {Languages.map(language => {\n        return (\n          <div className={classes.techList} key={language.id}>\n            <img className={classes.icon} src={language.icon} alt={language.name} />\n            <FormControlLabel \n              control={<Checkbox color=\"primary\" \n                onChange={handleChange} \n                value={language.id} \n              />} \n              label={language.name} \n            />\n          </div>\n      )})}\n      </FormControl>\n    </>\n  )\n}","import license from '../../assets/license.json'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Radio from '@material-ui/core/Radio'\nimport { useState } from 'react'\n\nexport default function LicenseList() {\n  const [selected, setSelected] = useState(2);\n\n  const handleChange = (event) => {\n    console.log(event.target.value);\n    setSelected(Number(event.target.value));\n  }\n\n  return(\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">License</FormLabel>\n      <RadioGroup \n        aria-label=\"license\" \n        name=\"license\" \n        value={selected} \n        onClick={handleChange}\n      >\n        {license.map(item => {return(  \n          <FormControlLabel \n            key={item.id} \n            value={item.id} \n            control={\n              <Radio\n                color=\"primary\" \n                checkedIcon={\n                  <img src={item.icon} height=\"48px\"/>\n                }\n                icon={\n                  <img src={item.inactive} height=\"48px\"/>\n                } \n              />\n            } \n            label={item.name} \n            height=\"24pt\"\n          />\n        )})}\n      </RadioGroup>\n    </FormControl>\n  )\n}","import Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\nimport makeStyles from '@material-ui/styles/makeStyles';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport GettingStarted from './GettingStarted';\nimport ProjectOverview from './ProjectOverview';\nimport Shields from './Shields';\nimport TechList from './TechList';\nimport Divider from '@material-ui/core/Divider';\nimport LicenseList from './LicenseList';\n\nconst useStyles = makeStyles({\n  formCard: {\n    padding: 10,\n    marginLeft: 20,\n    marginRight: 20,\n  },\n  divider: {\n    marginTop: 20,\n    marginBottom: 20,\n  },\n});\n\n\nexport default function Form() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [linkedInId, setLinkedInId] = useState('johnturner4004');\n\n\n  const handleBlur = () => {\n    let code = (\n \n//shields\n//project overview\n//built with\n// Usage\n// License\n`\n## Acknowledgements\n\n## Contacts\n\n<a href=\"https://www.linkedin.com/in/${linkedInId}\"><img src=\"https://img.shields.io/badge/LinkedIn-0077B5?style=for-the-badge&logo=linkedin&logoColor=white\" /></a>`\n);\ndispatch({ type: 'UPDATE_TEXT' , payload: { code: code } })\n}\n  \n  useEffect(() => {\n    handleBlur()\n  }, []);\n\n  return (\n    <Card className={classes.formCard}>\n      <ProjectOverview />\n      <Divider className={classes.divider} />\n      <Shields />\n      <Divider className={classes.divider} />\n      <TechList />\n      <Divider className={classes.divider} />\n      <GettingStarted />\n      <Divider className={classes.divider} />\n      <LicenseList />\n      <Divider className={classes.divider} />\n      <TextField onChange={(event)  => setLinkedInId(event.target.value)} onBlur={() => handleBlur()} label=\"LinkedIn Username\" />\n    </Card>\n  )\n}","import Card from \"@material-ui/core/Card\";\nimport makeStyles from \"@material-ui/styles/makeStyles\";\nimport ReactMarkdown from \"react-markdown\";\nimport { useSelector } from \"react-redux\";\nimport rehypeRaw from 'rehype-raw';\n\nconst useStyles = makeStyles({\n  previewCard: {\n    padding: 10,\n    margin: 10,\n    height: \"100%\",\n  },\n});\n\nexport default function MDPreview() {\n  const classes = useStyles();\n  const store = useSelector(store => store);\n\n  return (\n    <Card className={classes.previewCard}>\n      <ReactMarkdown rehypePlugins={[rehypeRaw]}>\n        {store.shieldCode}\n      </ReactMarkdown>\n      <ReactMarkdown rehypePlugins={[rehypeRaw]}>\n        {store.overviewCode}\n      </ReactMarkdown>\n      <ReactMarkdown rehypePlugins={[rehypeRaw]}>\n        {store.iconList}\n      </ReactMarkdown>\n      <ReactMarkdown rehypePlugins={[rehypeRaw]}>\n        {store.gettingStartedCode}\n      </ReactMarkdown>\n    </Card>\n  );\n}","import AppBar from \"@material-ui/core/AppBar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function Header() {\n  return (\n    <AppBar color='primary' position='relative'>\n      <Typography variant='h1'>README.md Generator</Typography>\n    </AppBar>\n  );\n};","import Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport makeStyles from '@material-ui/styles/makeStyles'\nimport CodeDisplay from './contents/CodeDisplay'\nimport Form from './contents/Form/Form'\nimport MDPreview from './contents/MDPreview'\nimport Header from './layout/Header'\n\nconst useStyles = makeStyles({\n  page: {\n    padding: 0,\n    margin: 0,\n    width: '100vw',\n    maxWidth: '100vw',\n  },\n  paper: {\n    paddingBottom: 40,\n    paddingTop: 20,\n    margin: 20,\n    height: '100%',\n  },\n  gridContainer: {\n    padding: 10,\n  },\n})\n\n\nfunction App() {\n  const classes = useStyles()\n  \n  return (\n    <Container className={classes.page}>\n      <Header />\n      <Paper className={classes.paper}>\n        <Form />\n        <Grid container className={classes.gridContainer} direction=\"row\">\n          <Grid item xs={12} sm={6}>\n            <CodeDisplay />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <MDPreview />\n          </Grid>\n        </Grid>\n      </Paper>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const gettingStartedCode = (state = '', action) => {\n  switch (action.type) {\n    case 'UPDATE_GETTING_STARTED':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default gettingStartedCode;","const iconList = (state = '', action) => {\n  switch (action.type) {\n    case 'UPDATE_ICONS':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default iconList;","const overviewCode = (state = '', action) => {\n  switch (action.type) {\n    case 'UPDATE_OVERVIEW':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default overviewCode;","const shieldCode = (state = '', action) => {\n  switch (action.type) {\n    case 'UPDATE_SHIELD':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default shieldCode;","const textInput = (state = '', action) => {\n  switch (action.type) {\n    case 'UPDATE_TEXT':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default textInput;","import { combineReducers } from 'redux';\nimport gettingStartedCode from './gettingStartedCode.reducer';\nimport iconList from './iconList.reducer';\nimport overviewCode from './overviewCode.reducer';\nimport shieldCode from './shieldCode.reducer';\nimport textInput from './textInput.reducer';\n\nconst rootReducer = combineReducers({\n  gettingStartedCode,\n  iconList,\n  overviewCode,\n  shieldCode,\n  textInput,\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './redux/reducer/_root.reducer';\nimport logger from 'redux-logger'\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(logger)\n);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}